basePath: /api/v1
definitions:
  database.FileMetadata:
    properties:
      created_at:
        description: 记录创建时间
        type: string
      file_format:
        description: 文件格式/扩展名（如：pdf、jpg、txt等）
        type: string
      file_hash:
        description: 文件内容的SHA256哈希值，用于去重和完整性校验
        type: string
      file_id:
        description: 文件唯一标识符（UUID格式）
        type: string
      file_name:
        description: 原始文件名称，最大255字符
        type: string
      file_size:
        description: 文件大小，单位为字节
        type: integer
      id:
        description: 主键ID，自增
        type: integer
      modify_count:
        description: 文件被修改的次数统计
        type: integer
      storage_path:
        description: 文件在存储系统中的完整路径
        type: string
      updated_at:
        description: 记录最后更新时间
        type: string
      view_count:
        description: 文件被查看的次数统计
        type: integer
    type: object
  database.Note:
    properties:
      children:
        description: 子笔记列表，一对多关联
        items:
          $ref: '#/definitions/database.Note'
        type: array
      cover:
        description: 封面图片URL或路径
        type: string
      created_at:
        description: 创建时间
        type: string
      creator_id:
        description: 创建者ID
        type: string
      file:
        allOf:
        - $ref: '#/definitions/database.FileMetadata'
        description: 关联的文件对象
      file_id:
        description: 关联的文件ID，指向FileMetadata表中的文件内容
        type: string
      icon:
        description: 笔记图标，可以是emoji或图标名称
        type: string
      id:
        description: 主键ID，自增
        type: integer
      is_archived:
        description: 是否已归档
        type: boolean
      is_favorite:
        description: 是否收藏
        type: boolean
      is_public:
        description: 是否公开可见
        type: boolean
      level:
        description: 笔记层级深度，根笔记为0
        type: integer
      note_id:
        description: 笔记唯一标识符（UUID格式）
        type: string
      parent:
        allOf:
        - $ref: '#/definitions/database.Note'
        description: 父笔记对象，外键关联
      parent_id:
        description: 父笔记ID，支持无限层级结构，根笔记为null
        type: integer
      path:
        description: 笔记的完整路径，用于快速层级查询，格式如：/1/2/3
        type: string
      properties:
        description: 一对多关联扩展属性
        items:
          $ref: '#/definitions/database.NoteProperty'
        type: array
      sort_order:
        description: 在同级笔记中的排序顺序
        type: integer
      tags:
        description: 关联关系
        items:
          $ref: '#/definitions/database.Tag'
        type: array
      title:
        description: 笔记标题，最大255字符
        type: string
      type:
        description: 笔记类型：page（页面）、database（数据库）、text（文本）等
        type: string
      updated_at:
        description: 最后更新时间
        type: string
      updater_id:
        description: 最后更新者ID
        type: string
      view_count:
        description: 笔记被查看次数
        type: integer
    type: object
  database.NoteProperty:
    properties:
      bool_value:
        description: 布尔类型值
        type: boolean
      created_at:
        description: 创建时间
        type: string
      date_value:
        description: 日期类型值
        type: string
      id:
        description: 主键ID，自增
        type: integer
      json_value:
        description: JSON类型值，用于复杂数据结构
        type: string
      note:
        allOf:
        - $ref: '#/definitions/database.Note'
        description: 关联的笔记对象
      note_id:
        description: 关联的笔记ID，外键
        type: integer
      number_value:
        description: 数字类型值
        type: number
      property_key:
        description: 属性键名，如：priority、status、due_date等
        type: string
      property_type:
        description: 属性类型：text、number、date、boolean、select、multi_select等
        type: string
      text_value:
        description: 文本类型值
        type: string
      updated_at:
        description: 最后更新时间
        type: string
    type: object
  database.OSSConfig:
    properties:
      access_key:
        description: 访问密钥ID，用于API认证
        type: string
      auto_sync:
        description: 是否开启文件自动同步功能
        type: boolean
      bucket:
        description: 存储桶名称，OSS中的容器名称
        type: string
      created_at:
        description: 配置创建时间
        type: string
      endpoint:
        description: 自定义服务端点URL，可选配置
        type: string
      id:
        description: 主键ID，自增
        type: integer
      is_active:
        description: 是否为当前激活使用的配置，系统中只能有一个激活配置
        type: boolean
      is_enabled:
        description: 配置是否启用，禁用后不可使用
        type: boolean
      keep_structure:
        description: 同步时是否保持本地文件目录结构
        type: boolean
      name:
        description: 配置名称，用于标识不同的OSS配置
        type: string
      provider:
        description: OSS服务提供商：aliyun（阿里云）、tencent（腾讯云）、qiniu（七牛云）
        type: string
      region:
        description: 服务区域，如：cn-hangzhou、ap-beijing等
        type: string
      secret_key:
        description: 访问密钥Secret，敏感信息，API响应时不返回
        type: string
      sync_path:
        description: OSS中的同步路径前缀，默认为"files"
        type: string
      updated_at:
        description: 配置最后修改时间
        type: string
    type: object
  database.Tag:
    properties:
      color:
        description: 标签颜色，支持预定义颜色或十六进制色值
        type: string
      created_at:
        description: 创建时间
        type: string
      description:
        description: 标签描述
        type: string
      id:
        description: 主键ID，自增
        type: integer
      name:
        description: 标签名称，唯一索引
        type: string
      notes:
        description: 关联关系
        items:
          $ref: '#/definitions/database.Note'
        type: array
      tag_id:
        description: 标签唯一标识符（UUID格式）
        type: string
      updated_at:
        description: 最后更新时间
        type: string
      usage_count:
        description: 标签使用次数统计
        type: integer
    type: object
  handler.APIResponse:
    properties:
      data:
        description: 响应数据
      error:
        description: 错误信息
        type: string
      message:
        description: 响应消息
        type: string
      success:
        description: 请求是否成功
        type: boolean
    type: object
  handler.AddNoteTagRequest:
    properties:
      tag_id:
        description: 标签ID
        type: string
    required:
    - tag_id
    type: object
  handler.BatchCreateTagsRequest:
    properties:
      names:
        description: 标签名称列表
        items:
          type: string
        minItems: 1
        type: array
    required:
    - names
    type: object
  handler.BatchMoveNotesRequest:
    properties:
      new_parent_id:
        description: 新父笔记ID
        type: string
      note_ids:
        description: 笔记ID列表
        items:
          type: string
        minItems: 1
        type: array
    required:
    - note_ids
    type: object
  handler.MoveNoteRequest:
    properties:
      new_parent_id:
        description: 新父笔记ID
        type: string
      new_sort_order:
        description: 新排序位置
        type: integer
    type: object
  handler.MoveNoteTreeRequest:
    properties:
      new_parent_id:
        description: 新父笔记ID
        type: string
    type: object
  handler.PaginatedResponse:
    properties:
      data:
        description: 数据列表
      page:
        description: 当前页码
        type: integer
      page_size:
        description: 每页数量
        type: integer
      total:
        description: 总数量
        type: integer
      total_pages:
        description: 总页数
        type: integer
    type: object
  handler.SetNotePropertyRequest:
    properties:
      key:
        description: 属性键
        type: string
      property_type:
        description: 属性类型
        type: string
      value:
        description: 属性值
    required:
    - key
    - property_type
    - value
    type: object
  note.CreateNoteRequest:
    properties:
      content:
        description: 笔记内容
        type: string
      cover:
        description: 封面
        type: string
      creator_id:
        description: 创建者ID
        type: string
      icon:
        description: 图标
        type: string
      is_favorite:
        description: 是否收藏
        type: boolean
      is_public:
        description: 是否公开
        type: boolean
      parent_id:
        description: 父笔记ID
        type: string
      properties:
        additionalProperties: true
        description: 扩展属性
        type: object
      sort_order:
        description: 排序
        type: integer
      tags:
        description: 标签ID列表
        items:
          type: string
        type: array
      title:
        description: 笔记标题
        maxLength: 255
        type: string
      type:
        description: 笔记类型
        type: string
    required:
    - creator_id
    - title
    - type
    type: object
  note.UpdateNoteRequest:
    properties:
      content:
        description: 笔记内容
        type: string
      cover:
        description: 封面
        type: string
      icon:
        description: 图标
        type: string
      is_archived:
        description: 是否归档
        type: boolean
      is_favorite:
        description: 是否收藏
        type: boolean
      is_public:
        description: 是否公开
        type: boolean
      properties:
        additionalProperties: true
        description: 扩展属性
        type: object
      sort_order:
        description: 排序
        type: integer
      tags:
        description: 标签ID列表
        items:
          type: string
        type: array
      title:
        description: 笔记标题
        type: string
      type:
        description: 笔记类型
        type: string
      updater_id:
        description: 更新者ID
        type: string
    required:
    - updater_id
    type: object
  tag.CreateTagRequest:
    properties:
      color:
        description: 标签颜色
        maxLength: 20
        type: string
      description:
        description: 标签描述
        maxLength: 500
        type: string
      name:
        description: 标签名称
        maxLength: 100
        type: string
    required:
    - name
    type: object
  tag.TagUsageStats:
    properties:
      created_at:
        description: 创建时间
        type: string
      last_used_at:
        description: 最后使用时间
        type: string
      note_count:
        description: 关联笔记数量
        type: integer
      tag_id:
        description: 标签ID
        type: string
      tag_name:
        description: 标签名称
        type: string
      usage_count:
        description: 使用次数
        type: integer
    type: object
  tag.UpdateTagRequest:
    properties:
      color:
        description: 标签颜色
        maxLength: 20
        type: string
      description:
        description: 标签描述
        maxLength: 500
        type: string
      name:
        description: 标签名称
        maxLength: 100
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: 阿里云OSS文件管理系统 - Go语言实现的文件上传、下载、同步服务
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Scinote Go Client API
  version: "1.0"
paths:
  /api/notes:
    post:
      consumes:
      - application/json
      description: 创建一个新的笔记，支持层级结构、标签和扩展属性
      parameters:
      - description: 创建笔记请求
        in: body
        name: note
        required: true
        schema:
          $ref: '#/definitions/note.CreateNoteRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/handler.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/database.Note'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
      summary: 创建新笔记
      tags:
      - 笔记管理
  /api/notes/{id}:
    delete:
      consumes:
      - application/json
      description: 软删除笔记，支持级联删除子笔记
      parameters:
      - description: 笔记ID
        in: path
        name: id
        required: true
        type: string
      - default: false
        description: 是否级联删除子笔记
        in: query
        name: cascade
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "404":
          description: 笔记不存在
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
      summary: 删除笔记
      tags:
      - 笔记管理
    get:
      consumes:
      - application/json
      description: 根据笔记ID获取笔记的详细信息
      parameters:
      - description: 笔记ID
        in: path
        name: id
        required: true
        type: string
      - default: false
        description: 是否包含文件内容
        in: query
        name: include_content
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/handler.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/database.Note'
              type: object
        "404":
          description: 笔记不存在
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
      summary: 获取笔记详情
      tags:
      - 笔记管理
    put:
      consumes:
      - application/json
      description: 更新笔记的基本信息、内容、标签等
      parameters:
      - description: 笔记ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新笔记请求
        in: body
        name: note
        required: true
        schema:
          $ref: '#/definitions/note.UpdateNoteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            allOf:
            - $ref: '#/definitions/handler.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/database.Note'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "404":
          description: 笔记不存在
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
      summary: 更新笔记信息
      tags:
      - 笔记管理
  /api/notes/{id}/children:
    get:
      consumes:
      - application/json
      description: 获取指定笔记的直接子笔记列表，支持分页
      parameters:
      - description: 父笔记ID，空表示获取根笔记
        in: path
        name: id
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/handler.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.PaginatedResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
      summary: 获取笔记的子笔记
      tags:
      - 笔记管理
  /api/notes/{id}/move:
    post:
      consumes:
      - application/json
      description: 将笔记移动到新的父笔记下，并设置新的排序位置
      parameters:
      - description: 笔记ID
        in: path
        name: id
        required: true
        type: string
      - description: 移动笔记请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.MoveNoteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 移动成功
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "404":
          description: 笔记不存在
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
      summary: 移动笔记
      tags:
      - 笔记管理
  /api/notes/{id}/move-tree:
    post:
      consumes:
      - application/json
      description: 移动整个笔记树到新的父笔记下
      parameters:
      - description: 根笔记ID
        in: path
        name: id
        required: true
        type: string
      - description: 移动笔记树请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.MoveNoteTreeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 移动成功
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "404":
          description: 笔记不存在
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
      summary: 移动笔记树
      tags:
      - 笔记管理
  /api/notes/{id}/properties:
    get:
      consumes:
      - application/json
      description: 获取指定笔记的所有扩展属性
      parameters:
      - description: 笔记ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/handler.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/database.NoteProperty'
                  type: array
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "404":
          description: 笔记不存在
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
      summary: 获取笔记扩展属性
      tags:
      - 笔记管理
    post:
      consumes:
      - application/json
      description: 为指定笔记设置扩展属性
      parameters:
      - description: 笔记ID
        in: path
        name: id
        required: true
        type: string
      - description: 设置属性请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.SetNotePropertyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 设置成功
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "404":
          description: 笔记不存在
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
      summary: 设置笔记扩展属性
      tags:
      - 笔记管理
  /api/notes/{id}/tags:
    post:
      consumes:
      - application/json
      description: 为指定笔记添加标签
      parameters:
      - description: 笔记ID
        in: path
        name: id
        required: true
        type: string
      - description: 添加标签请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.AddNoteTagRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 添加成功
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "404":
          description: 笔记或标签不存在
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
      summary: 为笔记添加标签
      tags:
      - 笔记管理
  /api/notes/{id}/tags/{tag_id}:
    delete:
      consumes:
      - application/json
      description: 从指定笔记移除标签
      parameters:
      - description: 笔记ID
        in: path
        name: id
        required: true
        type: string
      - description: 标签ID
        in: path
        name: tag_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 移除成功
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "404":
          description: 笔记或标签不存在
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
      summary: 移除笔记标签
      tags:
      - 笔记管理
  /api/notes/batch-move:
    post:
      consumes:
      - application/json
      description: 将多个笔记批量移动到新的父笔记下
      parameters:
      - description: 批量移动笔记请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.BatchMoveNotesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 移动成功
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
      summary: 批量移动笔记
      tags:
      - 笔记管理
  /api/notes/children:
    get:
      consumes:
      - application/json
      description: 获取指定笔记的直接子笔记列表，支持分页
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/handler.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.PaginatedResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
      summary: 获取笔记的子笔记
      tags:
      - 笔记管理
  /api/notes/search:
    get:
      consumes:
      - application/json
      description: 根据关键词搜索笔记，支持分页
      parameters:
      - description: 搜索关键词
        in: query
        name: q
        required: true
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 搜索成功
          schema:
            allOf:
            - $ref: '#/definitions/handler.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.PaginatedResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
      summary: 搜索笔记
      tags:
      - 笔记管理
  /api/notes/tree:
    get:
      consumes:
      - application/json
      description: 获取完整的笔记树结构，支持指定根节点和最大深度
      parameters:
      - description: 根笔记ID，空表示从顶级开始
        in: query
        name: root_id
        type: string
      - default: 0
        description: 最大深度，0表示无限制
        in: query
        name: max_depth
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/handler.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/database.Note'
                  type: array
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
      summary: 获取笔记树结构
      tags:
      - 笔记管理
  /api/v1/files:
    get:
      description: 分页获取文件列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 文件列表
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 请求参数错误
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 服务器内部错误
          schema:
            additionalProperties: true
            type: object
      summary: 获取文件列表
      tags:
      - 文件管理
  /api/v1/files/{id}:
    delete:
      description: 根据文件ID删除文件
      parameters:
      - description: 文件ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 文件ID无效
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 文件不存在
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 服务器内部错误
          schema:
            additionalProperties: true
            type: object
      summary: 删除文件
      tags:
      - 文件管理
    get:
      description: 根据文件ID获取文件的详细信息
      parameters:
      - description: 文件ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 文件信息
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 文件ID无效
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 文件不存在
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 服务器内部错误
          schema:
            additionalProperties: true
            type: object
      summary: 获取文件信息
      tags:
      - 文件管理
    put:
      consumes:
      - multipart/form-data
      description: 根据文件ID更新文件内容
      parameters:
      - description: 文件ID
        in: path
        name: id
        required: true
        type: string
      - description: 新的文件内容
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 请求参数错误
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 文件不存在
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 服务器内部错误
          schema:
            additionalProperties: true
            type: object
      summary: 更新文件
      tags:
      - 文件管理
  /api/v1/files/{id}/download:
    get:
      description: 根据文件ID下载文件内容
      parameters:
      - description: 文件ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: 文件内容
          schema:
            type: file
        "400":
          description: 文件ID无效
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 文件不存在
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 服务器内部错误
          schema:
            additionalProperties: true
            type: object
      summary: 下载文件
      tags:
      - 文件管理
  /api/v1/files/search:
    get:
      description: 根据文件名搜索文件
      parameters:
      - description: 搜索关键词
        in: query
        name: q
        required: true
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 搜索结果
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 请求参数错误
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 服务器内部错误
          schema:
            additionalProperties: true
            type: object
      summary: 搜索文件
      tags:
      - 文件管理
  /api/v1/files/stats:
    get:
      description: 获取系统中文件的统计信息
      produces:
      - application/json
      responses:
        "200":
          description: 统计信息
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 服务器内部错误
          schema:
            additionalProperties: true
            type: object
      summary: 获取文件统计信息
      tags:
      - 文件管理
  /api/v1/files/upload:
    post:
      consumes:
      - multipart/form-data
      description: 上传单个文件到服务器
      parameters:
      - description: 要上传的文件
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: 上传成功
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 请求参数错误
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 服务器内部错误
          schema:
            additionalProperties: true
            type: object
      summary: 上传文件
      tags:
      - 文件管理
  /api/v1/tags:
    get:
      consumes:
      - application/json
      description: 获取所有标签的分页列表，支持排序
      parameters:
      - description: 页码（默认1）
        in: query
        name: page
        type: integer
      - description: 每页数量（默认20，最大100）
        in: query
        name: page_size
        type: integer
      - description: 排序字段（name、usage_count、created_at、updated_at，默认created_at）
        in: query
        name: sort_by
        type: string
      - description: 排序方向（asc、desc，默认desc）
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/handler.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.PaginatedResponse'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
      summary: 获取标签列表
      tags:
      - 标签管理
    post:
      consumes:
      - application/json
      description: 创建一个新的标签，标签名称必须唯一
      parameters:
      - description: 创建标签请求
        in: body
        name: tag
        required: true
        schema:
          $ref: '#/definitions/tag.CreateTagRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/handler.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/database.Tag'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "409":
          description: 标签名称已存在
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
      summary: 创建新标签
      tags:
      - 标签管理
  /api/v1/tags/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的标签，可选择是否强制删除（即使有关联笔记）
      parameters:
      - description: 标签ID
        in: path
        name: id
        required: true
        type: string
      - description: 是否强制删除（默认false）
        in: query
        name: force
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "404":
          description: 标签不存在
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "409":
          description: 标签仍有关联笔记
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
      summary: 删除标签
      tags:
      - 标签管理
    get:
      consumes:
      - application/json
      description: 根据标签ID获取标签的详细信息
      parameters:
      - description: 标签ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/handler.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/database.Tag'
              type: object
        "404":
          description: 标签不存在
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
      summary: 获取标签详情
      tags:
      - 标签管理
    put:
      consumes:
      - application/json
      description: 更新标签的名称、颜色或描述信息
      parameters:
      - description: 标签ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新标签请求
        in: body
        name: tag
        required: true
        schema:
          $ref: '#/definitions/tag.UpdateTagRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            allOf:
            - $ref: '#/definitions/handler.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/database.Tag'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "404":
          description: 标签不存在
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "409":
          description: 标签名称已存在
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
      summary: 更新标签信息
      tags:
      - 标签管理
  /api/v1/tags/{id}/stats:
    get:
      consumes:
      - application/json
      description: 获取标签的详细使用统计信息
      parameters:
      - description: 标签ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/handler.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/tag.TagUsageStats'
              type: object
        "404":
          description: 标签不存在
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
      summary: 获取标签使用统计
      tags:
      - 标签管理
  /api/v1/tags/batch:
    post:
      consumes:
      - application/json
      description: 批量创建多个标签，自动去重和跳过已存在的标签
      parameters:
      - description: 批量创建标签请求
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/handler.BatchCreateTagsRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/handler.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/database.Tag'
                  type: array
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
      summary: 批量创建标签
      tags:
      - 标签管理
  /api/v1/tags/popular:
    get:
      consumes:
      - application/json
      description: 获取使用次数最多的标签列表
      parameters:
      - description: 返回数量限制（默认10，最大100）
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/handler.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/database.Tag'
                  type: array
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
      summary: 获取热门标签
      tags:
      - 标签管理
  /api/v1/tags/search:
    get:
      consumes:
      - application/json
      description: 根据关键词搜索标签名称和描述
      parameters:
      - description: 搜索关键词
        in: query
        name: q
        required: true
        type: string
      - description: 页码（默认1）
        in: query
        name: page
        type: integer
      - description: 每页数量（默认20，最大100）
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 搜索成功
          schema:
            allOf:
            - $ref: '#/definitions/handler.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/handler.PaginatedResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/handler.APIResponse'
      summary: 搜索标签
      tags:
      - 标签管理
  /oss/configs:
    get:
      consumes:
      - application/json
      description: 获取系统中所有已配置的OSS存储配置列表
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 服务器内部错误
          schema:
            additionalProperties: true
            type: object
      summary: 获取所有OSS配置
      tags:
      - OSS配置管理
    post:
      consumes:
      - application/json
      description: 创建新的OSS存储配置，支持阿里云、腾讯云、七牛云等多种云存储服务
      parameters:
      - description: OSS配置信息
        in: body
        name: config
        required: true
        schema:
          $ref: '#/definitions/database.OSSConfig'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 请求参数错误
          schema:
            additionalProperties: true
            type: object
      summary: 创建OSS配置
      tags:
      - OSS配置管理
  /oss/configs/{id}:
    delete:
      consumes:
      - application/json
      description: 根据配置ID删除指定的OSS配置
      parameters:
      - description: 配置ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 配置ID无效
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 配置不存在
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 服务器内部错误
          schema:
            additionalProperties: true
            type: object
      summary: 删除OSS配置
      tags:
      - OSS配置管理
    get:
      consumes:
      - application/json
      description: 根据配置ID获取指定的OSS配置详细信息
      parameters:
      - description: 配置ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            $ref: '#/definitions/database.OSSConfig'
        "400":
          description: 配置ID无效
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 配置不存在
          schema:
            additionalProperties: true
            type: object
      summary: 获取单个OSS配置
      tags:
      - OSS配置管理
    put:
      consumes:
      - application/json
      description: 根据配置ID更新指定的OSS配置信息
      parameters:
      - description: 配置ID
        in: path
        name: id
        required: true
        type: integer
      - description: OSS配置信息
        in: body
        name: config
        required: true
        schema:
          $ref: '#/definitions/database.OSSConfig'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 请求参数错误
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 配置不存在
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 服务器内部错误
          schema:
            additionalProperties: true
            type: object
      summary: 更新OSS配置
      tags:
      - OSS配置管理
  /oss/configs/{id}/activate:
    post:
      consumes:
      - application/json
      description: 将指定的OSS配置设置为当前激活状态，同时将其他配置设为非激活状态
      parameters:
      - description: 配置ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 激活成功
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 配置ID无效
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 配置不存在
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 服务器内部错误
          schema:
            additionalProperties: true
            type: object
      summary: 激活OSS配置
      tags:
      - OSS配置管理
  /oss/configs/{id}/test:
    post:
      consumes:
      - application/json
      description: 测试指定OSS配置的连接是否正常
      parameters:
      - description: 配置ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 连接测试成功
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 配置ID无效
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 连接测试失败
          schema:
            additionalProperties: true
            type: object
      summary: 测试OSS配置连接
      tags:
      - OSS配置管理
  /oss/configs/{id}/toggle:
    post:
      consumes:
      - application/json
      description: 切换指定OSS配置的启用状态
      parameters:
      - description: 配置ID
        in: path
        name: id
        required: true
        type: integer
      - description: 启用状态
        in: body
        name: request
        required: true
        schema:
          properties:
            enabled:
              type: boolean
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 操作成功
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 请求参数错误
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 配置不存在
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 服务器内部错误
          schema:
            additionalProperties: true
            type: object
      summary: 启用/禁用OSS配置
      tags:
      - OSS配置管理
  /oss/configs/active:
    get:
      consumes:
      - application/json
      description: 获取系统中当前处于激活状态的OSS配置信息
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 未找到激活的配置
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 服务器内部错误
          schema:
            additionalProperties: true
            type: object
      summary: 获取当前激活的OSS配置
      tags:
      - OSS配置管理
  /oss/sync/all:
    post:
      consumes:
      - application/json
      description: 启动从OSS云存储同步所有文件到本地的任务
      produces:
      - application/json
      responses:
        "200":
          description: 同步任务启动成功
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 同步任务启动失败
          schema:
            additionalProperties: true
            type: object
      summary: 从OSS同步所有文件
      tags:
      - OSS同步管理
  /oss/sync/batch:
    post:
      consumes:
      - application/json
      description: 将多个指定文件批量同步上传到OSS云存储
      parameters:
      - description: 文件ID列表
        in: body
        name: request
        required: true
        schema:
          properties:
            file_ids:
              items:
                type: string
              type: array
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 批量同步任务启动成功
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 请求参数错误
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 批量同步任务启动失败
          schema:
            additionalProperties: true
            type: object
      summary: 批量同步文件到OSS
      tags:
      - OSS同步管理
  /oss/sync/compare:
    get:
      consumes:
      - application/json
      description: 扫描本地文件表并与OSS云端文件进行对比，返回需要更新的文件和仅存在于云端的文件列表
      produces:
      - application/json
      responses:
        "200":
          description: 对比结果
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 扫描对比失败
          schema:
            additionalProperties: true
            type: object
      summary: 扫描并对比文件
      tags:
      - OSS同步管理
  /oss/sync/logs:
    get:
      consumes:
      - application/json
      description: 分页获取OSS文件同步操作的历史日志记录
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 同步日志列表
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 获取日志失败
          schema:
            additionalProperties: true
            type: object
      summary: 获取同步日志
      tags:
      - OSS同步管理
  /oss/sync/retry/{logID}:
    post:
      consumes:
      - application/json
      description: 根据日志ID重新执行失败的OSS同步任务
      parameters:
      - description: 同步日志ID
        in: path
        name: logID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 重试任务启动成功
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 日志ID无效
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 重试任务启动失败
          schema:
            additionalProperties: true
            type: object
      summary: 重试失败的同步任务
      tags:
      - OSS同步管理
  /oss/sync/status/{fileID}:
    get:
      consumes:
      - application/json
      description: 根据文件ID获取指定文件的OSS同步状态信息
      parameters:
      - description: 文件ID
        in: path
        name: fileID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 文件同步状态
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 文件ID无效
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 文件不存在
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 获取状态失败
          schema:
            additionalProperties: true
            type: object
      summary: 获取文件同步状态
      tags:
      - OSS同步管理
  /oss/sync/upload/{fileID}:
    post:
      consumes:
      - application/json
      description: 将指定的单个文件同步上传到OSS云存储
      parameters:
      - description: 文件ID
        in: path
        name: fileID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 同步任务启动成功
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 文件ID无效
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 同步任务启动失败
          schema:
            additionalProperties: true
            type: object
      summary: 同步单个文件到OSS
      tags:
      - OSS同步管理
schemes:
- http
- https
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
